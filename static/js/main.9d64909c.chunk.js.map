{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/actions.js","redux/operations.js","components/ContactForm/ContactForm.js","redux/selectors.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","name","number","dispatch","contact","id","post","then","data","catch","error","contactId","delete","a","get","ContactForm","state","nameInputId","shortid","generate","numberInputId","handleInputChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","styles","form","htmlFor","type","pattern","title","required","onChange","input","btn","Component","connect","operations","getFilter","contacts","filter","getLoading","loading","getFilteredContacts","createSelector","items","normalizedFilter","toLowerCase","includes","selectors","onDelete","list","map","list_item","onClick","e","actions","target","App","fetchContacts","isLoading","createReducer","_","payload","combineReducers","store","configureStore","reducer","contactsReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d64909c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3ikVR\",\"list_item\":\"ContactList_list_item__2NQ4d\",\"contact\":\"ContactList_contact__2xXPv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__148r7\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\r\nexport const fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\r\nexport const fetchContactError = createAction(\"contacts/fetchContactError\");\r\n\r\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nexport const addContactError = createAction(\"contacts/addContactError\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"contacts/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"contacts/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\r\n\r\nexport const changeFilter = createAction(\"contacts/changeFilter\");\r\n","import axios from \"axios\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactError,\r\n  fetchContactSuccess,\r\n} from \"./actions\";\r\n\r\naxios.defaults.baseURL = \" http://localhost:4040\";\r\n\r\nconst fetchContacts = () => async (dispatch) => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error));\r\n  }\r\n\r\n  // .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n  // .catch((error) => dispatch(fetchContactError(error)));\r\n};\r\n\r\n// const fetchContacts = () => (dispatch) => {\r\n//   dispatch(fetchContactRequest());\r\n\r\n//   axios\r\n//     .get(\"/contacts\")\r\n//     .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n//     .catch((error) => dispatch(fetchContactError(error)));\r\n// };\r\n\r\nconst addContact =\r\n  ({ name, number }) =>\r\n  (dispatch) => {\r\n    const contact = {\r\n      name: name,\r\n      number: number,\r\n      id: \"\",\r\n    };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n      .post(\"/contacts\", contact)\r\n      .then(({ data }) => dispatch(addContactSuccess(data)))\r\n      .catch((error) => dispatch(addContactError(error)));\r\n  };\r\n\r\nconst deleteContact = (contactId) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch((error) => dispatch(deleteContactError(error)));\r\n};\r\n\r\nexport default { addContact, deleteContact, fetchContacts };\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport shortid from \"shortid\";\nimport styles from \"./ContactForm.module.css\";\nimport operations from \"../../redux/operations\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  handleInputChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    //console.log(this.state);\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.form}>\n        <label htmlFor={this.nameInputId}>Name</label>\n        <input\n          value={this.state.name}\n          type=\"text\"\n          name=\"name\"\n          id={this.nameInputId}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={this.handleInputChange}\n          className={styles.input}\n        />\n\n        <label htmlFor={this.numberInputId}>Number</label>\n        <input\n          value={this.state.number}\n          id={this.numberInputId}\n          onChange={this.handleInputChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          className={styles.input}\n        />\n\n        <button type=\"submit\" className={styles.btn}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (name, number) => dispatch(operations.addContact(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getLoading = (state) => state.contacts.loading;\r\n\r\nconst getFilter = (state) => state.contacts.filter;\r\n\r\nconst getAllContacts = (state) => state.contacts.items;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n\r\nexport default {\r\n  getLoading,\r\n  getFilter,\r\n  getFilteredContacts,\r\n};\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"./ContactList.module.css\";\nimport PropTypes from \"prop-types\";\nimport operations from \"../../redux/operations\";\nimport selectors from \"../../redux/selectors\";\n\nconst ContactList = ({ contacts, onDelete }) => (\n  <ul className={styles.list}>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id} className={styles.list_item}>\n        <div className={styles.contact}>\n          <p>{name}:</p>\n          <p>{number}</p>\n        </div>\n        <button onClick={() => onDelete(id)}>Delete</button>\n      </li>\n    ))}\n  </ul>\n);\n\nconst mapStateToProps = (state) => ({\n  contacts: selectors.getFilteredContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (id) => dispatch(operations.deleteContact(id)),\n});\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport styles from \"./Filter.module.css\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../redux/actions\";\nimport selectors from \"../../redux/selectors\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        className={styles.input}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  value: selectors.getFilter(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(actions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport { connect } from \"react-redux\";\nimport operations from \"./redux/operations\";\nimport selectors from \"./redux/selectors\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n        {this.props.isLoading && <h1>Loading...</h1>}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isLoading: selectors.getLoading(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchContacts: () => dispatch(operations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactError,\r\n  deleteContactSuccess,\r\n  changeFilter,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from \"./actions\";\r\n\r\nconst items = createReducer(\r\n  [\r\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n  ],\r\n  {\r\n    [fetchContactSuccess]: (_, { payload }) => payload,\r\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n    [deleteContactSuccess]: (state, { payload }) =>\r\n      state.filter(({ id }) => id !== payload),\r\n  }\r\n);\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({ items, filter, loading, error });\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./reducer\";\r\n// import storage from \"redux-persist/lib/storage\";\r\nimport {\r\n  // persistStore,\r\n  // persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n\r\n// const contactsPersistConfig = {\r\n//   key: \"contacts\",\r\n//   storage,\r\n//   blacklist: [\"filter\"],\r\n// };\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport styles from \"./styles.css\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n// import { PersistGate } from \"redux-persist/integration/react\";\n\nconsole.log(store);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={<h1>Loading...</h1>} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__zlgxM\",\"input\":\"ContactForm_input__1gTh-\",\"label\":\"ContactForm_label__1CCsp\"};"],"sourceRoot":""}